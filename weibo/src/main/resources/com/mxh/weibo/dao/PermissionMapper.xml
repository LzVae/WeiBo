<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mxh.weibo.dao.PermissionMapper">
  <resultMap id="BaseResultMap" type="com.mxh.weibo.common.model.Permission">
    <!--
      WARNING - @mbggenerated
      auto generated, do not modify.
    -->
    <id column="permission_PERMISSION_ID" jdbcType="INTEGER" property="permissionId" />
    <result column="permission_PERMISSION_CODE" jdbcType="VARCHAR" property="permissionCode" />
    <result column="permission_PERMISSION_NAME" jdbcType="VARCHAR" property="permissionName" />
    <result column="permission_IS_PUBLIC" jdbcType="TINYINT" property="isPublic" />
    <result column="permission_DELETED" jdbcType="TINYINT" property="deleted" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      auto generated, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      auto generated, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      auto generated, do not modify.
    -->
    permission.PERMISSION_ID as permission_PERMISSION_ID, permission.PERMISSION_CODE as permission_PERMISSION_CODE, 
    permission.PERMISSION_NAME as permission_PERMISSION_NAME, permission.IS_PUBLIC as permission_IS_PUBLIC, 
    permission.DELETED as permission_DELETED
  </sql>
  <select id="selectByExample" parameterType="com.mxh.weibo.common.model.PermissionExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      auto generated, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from aa_permission permission
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      auto generated, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from aa_permission permission
    where permission.PERMISSION_ID = #{permissionId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      auto generated, do not modify.
    -->
    delete from aa_permission
    where PERMISSION_ID = #{permissionId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.mxh.weibo.common.model.PermissionExample">
    <!--
      WARNING - @mbggenerated
      auto generated, do not modify.
    -->
    delete from aa_permission permission
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.mxh.weibo.common.model.Permission">
    <!--
      WARNING - @mbggenerated
      auto generated, do not modify.
    -->
    insert into aa_permission (PERMISSION_ID, PERMISSION_CODE, PERMISSION_NAME, 
      IS_PUBLIC, DELETED)
    values (#{permissionId,jdbcType=INTEGER}, #{permissionCode,jdbcType=VARCHAR}, #{permissionName,jdbcType=VARCHAR}, 
      #{isPublic,jdbcType=TINYINT}, #{deleted,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.mxh.weibo.common.model.Permission">
    <!--
      WARNING - @mbggenerated
      auto generated, do not modify.
    -->
    insert into aa_permission
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="permissionId != null">
        PERMISSION_ID,
      </if>
      <if test="permissionCode != null">
        PERMISSION_CODE,
      </if>
      <if test="permissionName != null">
        PERMISSION_NAME,
      </if>
      <if test="isPublic != null">
        IS_PUBLIC,
      </if>
      <if test="deleted != null">
        DELETED,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="permissionId != null">
        #{permissionId,jdbcType=INTEGER},
      </if>
      <if test="permissionCode != null">
        #{permissionCode,jdbcType=VARCHAR},
      </if>
      <if test="permissionName != null">
        #{permissionName,jdbcType=VARCHAR},
      </if>
      <if test="isPublic != null">
        #{isPublic,jdbcType=TINYINT},
      </if>
      <if test="deleted != null">
        #{deleted,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.mxh.weibo.common.model.PermissionExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbggenerated
      auto generated, do not modify.
    -->
    select count(*) from aa_permission permission
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      auto generated, do not modify.
    -->
    update aa_permission permission
    <set>
      <if test="record.permissionId != null">
        permission.PERMISSION_ID = #{record.permissionId,jdbcType=INTEGER},
      </if>
      <if test="record.permissionCode != null">
        permission.PERMISSION_CODE = #{record.permissionCode,jdbcType=VARCHAR},
      </if>
      <if test="record.permissionName != null">
        permission.PERMISSION_NAME = #{record.permissionName,jdbcType=VARCHAR},
      </if>
      <if test="record.isPublic != null">
        permission.IS_PUBLIC = #{record.isPublic,jdbcType=TINYINT},
      </if>
      <if test="record.deleted != null">
        permission.DELETED = #{record.deleted,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      auto generated, do not modify.
    -->
    update aa_permission permission
    set permission.PERMISSION_ID = #{record.permissionId,jdbcType=INTEGER},
      permission.PERMISSION_CODE = #{record.permissionCode,jdbcType=VARCHAR},
      permission.PERMISSION_NAME = #{record.permissionName,jdbcType=VARCHAR},
      permission.IS_PUBLIC = #{record.isPublic,jdbcType=TINYINT},
      permission.DELETED = #{record.deleted,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.mxh.weibo.common.model.Permission">
    <!--
      WARNING - @mbggenerated
      auto generated, do not modify.
    -->
    update aa_permission
    <set>
      <if test="permissionCode != null">
        PERMISSION_CODE = #{permissionCode,jdbcType=VARCHAR},
      </if>
      <if test="permissionName != null">
        PERMISSION_NAME = #{permissionName,jdbcType=VARCHAR},
      </if>
      <if test="isPublic != null">
        IS_PUBLIC = #{isPublic,jdbcType=TINYINT},
      </if>
      <if test="deleted != null">
        DELETED = #{deleted,jdbcType=TINYINT},
      </if>
    </set>
    where PERMISSION_ID = #{permissionId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mxh.weibo.common.model.Permission">
    <!--
      WARNING - @mbggenerated
      auto generated, do not modify.
    -->
    update aa_permission
    set PERMISSION_CODE = #{permissionCode,jdbcType=VARCHAR},
      PERMISSION_NAME = #{permissionName,jdbcType=VARCHAR},
      IS_PUBLIC = #{isPublic,jdbcType=TINYINT},
      DELETED = #{deleted,jdbcType=TINYINT}
    where PERMISSION_ID = #{permissionId,jdbcType=INTEGER}
  </update>
  
  <select id="selectPermissionByUserId" parameterType="java.lang.String" resultMap="BaseResultMap">
  	SELECT 
		<include refid="Base_Column_List" />
	FROM `aa_permission` permission
	JOIN `aa_role_permission` rp
	ON(
		rp.`PERMISSION_ID` = permission.`PERMISSION_ID`
	)
	WHERE rp.`ROLE_ID` IN (
		SELECT role.`ROLE_ID` FROM aa_role role
		JOIN `aa_role_user` ru 
		ON(
			ru.`ROLE_ID` = role.`ROLE_ID`
		)
		WHERE ru.`USER_ID` = #{uuid,jdbcType=VARCHAR}
	)
  </select>
</mapper>